#Class Script
#21 February 2024
#Codebook Clean Wrangle

library(tidyverse)
library(haven)
library(knitr)

#data
QoG = read_csv('qog_std_ts_jan24.csv') |>
  select(
    cname,
    year,
    br_dem, 
    br_pvote, 
    br_cw, 
    br_elect, 
    wdi_wip,
    starts_with('wdi_lfp')
  )

#functions
FctWhen = function(...){
  args = rlang::list2(...)
  rhs = map(args, rlang::f_rhs)
  cases = case_when(!!!args)
  exec(fct_relevel, cases, !!!rhs)
}

# tidy up -------------------
QoG2 = 
  QoG |> # could do this all in one w/.keep
  mutate(
    country = cname,
    year = year,
    women_in_parl = wdi_wip,
    PR_system = FctWhen(
      br_pvote == 0 ~ "Other",
      br_pvote == 1 ~ "PR system",
    ),
    .keep = 'unused'
  )
 
#apply functions to multiple columns 

QoG3 = 
  QoG2 |>
  mutate(
    across(starts_with('wdi_lfp'), ~. / 100)
  )

#codebook stuff-------------
#entry for factors variables
# need table with valye, l
count(QoG2, PR_system) |>
  mutate(
    values = row_number(),
    labels = as_factor(PR_system),
    freq = n, 
    .keep = 'none'
  ) |>
  kable()

#numeric variables
QoG2 |>
  summarise(
    min = min(women_in_parl, na.rm = T),
    mean = mean (women_in_parl, na.rm = T),
    median = median(women_in_parl, na.rm = T),
    max = max(women_in_parl, na.rm = T)
  ) |>
  kable(digits = 1L)

#wrap it up into a function
cbfactor = function(.data, x){
  x = enquo(x)
  count(.data, !!x) |>
    mutate(
      values = row_number(),
      labels = as_factor(!!x),
      freq = n,
      .keep = 'none'
    ) |>
    kable()
}

cbfactor(QoG2,PR_system)
